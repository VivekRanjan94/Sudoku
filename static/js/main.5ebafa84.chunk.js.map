{"version":3,"sources":["components/Element.js","components/Board.js","components/Loading.js","components/Time.js","components/Paused.js","components/sudokuReducer.js","sudoku/solveBoard.js","components/ButtonInput.js","components/Sudoku.js","hooks/useEventListener.js","components/App.js","index.js"],"names":["Element","element","x","y","value","selected","square","highlighted","wrong","setBoard","dispatch","className","classText","data-x","data-y","data-square","onClick","e","type","payload","target","col","row","inputClass","Board","sudoku","setTime","increment","time","useEffect","timeInterval","setInterval","clearInterval","board","map","rowIndex","columnIndex","Loading","format","hrs","mins","secs","ret","Time","Paused","mistakes","sudokuReducer","action","completed","dataset","colIndex","Number","shouldHighlight","selectedElement","newBoard","findIndex","some","wasWrong","correct","complete","undefined","innerText","solveBoard","length","_board","i","push","j","sudokoSolver","data","k","isValid","m","Math","floor","n","ButtonInput","handleInputClick","Sudoku","useReducer","useState","isLoading","setIsLoading","difficulty","setDifficulty","isPaused","setIsPaused","difficultySelectRef","useRef","getBoard","a","fetch","url","response","json","solution","parseInt","alert","console","log","eventType","handler","handlerRef","current","internalHandler","document","addEventListener","removeEventListener","useEventListener","code","key","name","id","onChange","defaultValue","ref","App","ReactDOM","render","StrictMode","querySelector"],"mappings":"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","file":"static/js/main.5ebafa84.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Element({\r\n  element: { x, y, value, selected, square, highlighted, wrong, setBoard },\r\n  dispatch,\r\n}) {\r\n  function handleClick(e) {\r\n    dispatch({ type: 'select', payload: { target: e.target } })\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className={`element ${classText(x, y)} ${selected ? 'selected' : ''} ${\r\n        highlighted ? 'highlighted' : ''\r\n      } ${wrong ? 'wrong' : ''} ${setBoard ? 'set' : ''}`}\r\n      data-x={x}\r\n      data-y={y}\r\n      data-square={square}\r\n      onClick={handleClick}\r\n    >\r\n      {value}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport function classText(col, row) {\r\n  let inputClass = ''\r\n  if (row % 3 === 0) {\r\n    inputClass += 'top-'\r\n  } else if (row % 3 === 1) {\r\n    inputClass += 'mid-'\r\n  } else {\r\n    inputClass += 'bot-'\r\n  }\r\n\r\n  if (col % 3 === 0) {\r\n    inputClass += 'left'\r\n  } else if (col % 3 === 1) {\r\n    inputClass += 'mid'\r\n  } else {\r\n    inputClass += 'right'\r\n  }\r\n\r\n  if (row === 0 && col === 0) {\r\n    inputClass += ' top-left-corner'\r\n  }\r\n  if (row === 0 && col === 8) {\r\n    inputClass += ' top-right-corner'\r\n  }\r\n  if (row === 8 && col === 0) {\r\n    inputClass += ' bot-left-corner'\r\n  }\r\n  if (row === 8 && col === 8) {\r\n    inputClass += ' bot-right-corner'\r\n  }\r\n\r\n  return `${inputClass}`\r\n}\r\n","import { useEffect } from 'react'\r\nimport Element from './Element.js'\r\n\r\nexport default function Board({ sudoku, dispatch, setTime }) {\r\n  function increment() {\r\n    setTime((time) => time + 1)\r\n  }\r\n\r\n  useEffect(() => {\r\n    const timeInterval = setInterval(increment, 1000)\r\n    return () => {\r\n      clearInterval(timeInterval)\r\n    }\r\n  }, [])\r\n  return (\r\n    <>\r\n      <div className='board'>\r\n        {sudoku.board.map((row, rowIndex) => {\r\n          return row.map((element, columnIndex) => {\r\n            return (\r\n              <Element\r\n                key={rowIndex * 9 + columnIndex}\r\n                element={element}\r\n                dispatch={dispatch}\r\n              />\r\n            )\r\n          })\r\n        })}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","export default function Loading() {\r\n  return 'Loading'\r\n}\r\n","import React from 'react'\r\n\r\nexport function format(time) {\r\n  // Hours, minutes and seconds\r\n  var hrs = ~~(time / 3600)\r\n  var mins = ~~((time % 3600) / 60)\r\n  var secs = ~~time % 60\r\n\r\n  // Output like \"1:01\" or \"4:03:59\" or \"123:03:59\"\r\n  var ret = ''\r\n  if (hrs > 0) {\r\n    ret += '' + hrs + ':' + (mins < 10 ? '0' : '')\r\n  }\r\n  ret += '' + mins + ':' + (secs < 10 ? '0' : '')\r\n  ret += '' + secs\r\n  return ret\r\n}\r\n\r\nexport default function Time({ time }) {\r\n  return <div>Time: {format(time)}</div>\r\n}\r\n","import { classText } from './Element'\r\nimport Time from './Time'\r\n\r\nexport default function Paused({ sudoku, time }) {\r\n  return (\r\n    <>\r\n      <div className='details'>\r\n        <div>Mistakes: {sudoku.mistakes}</div>\r\n        <Time time={time} />\r\n      </div>\r\n      <div className='paused__board'>\r\n        {sudoku.board.map((row, rowIndex) => {\r\n          return row.map((element, columnIndex) => {\r\n            return (\r\n              <div\r\n                className={`element ${classText(columnIndex, rowIndex)} `}\r\n              ></div>\r\n            )\r\n          })\r\n        })}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n","export default function sudokuReducer(sudoku, action) {\r\n  switch (action.type) {\r\n    case 'set-board': {\r\n      return { board: action.payload.board, mistakes: 0, completed: false }\r\n    }\r\n    case 'select': {\r\n      const { x, y } = action.payload.target.dataset\r\n      return {\r\n        ...sudoku,\r\n        board: sudoku.board.map((row, rowIndex) => {\r\n          return row.map((element, colIndex) => {\r\n            if (element.x === Number(x) && element.y === Number(y)) {\r\n              return { ...element, selected: true }\r\n            }\r\n            return {\r\n              ...element,\r\n              selected: false,\r\n              highlighted: shouldHighlight(action.payload.target, element),\r\n            }\r\n          })\r\n        }),\r\n        selectedElement: action.payload.target,\r\n      }\r\n    }\r\n    case 'input': {\r\n      let newBoard = [...sudoku.board]\r\n      let rowIndex = newBoard.findIndex((row) =>\r\n        row.some((element) => element.selected)\r\n      )\r\n      if (rowIndex >= 0) {\r\n        let colIndex = newBoard[rowIndex].findIndex(\r\n          (element) => element.selected\r\n        )\r\n        if (!newBoard[rowIndex][colIndex].setBoard) {\r\n          newBoard[rowIndex][colIndex].value = action.payload.value\r\n          let wasWrong =\r\n            action.payload.value !== newBoard[rowIndex][colIndex].correct\r\n          newBoard[rowIndex][colIndex].wrong = wasWrong\r\n\r\n          return {\r\n            ...sudoku,\r\n            board: newBoard,\r\n            mistakes: wasWrong ? sudoku.mistakes + 1 : sudoku.mistakes,\r\n            complete: !newBoard.some((row) =>\r\n              row.some((element) => element.value === undefined)\r\n            ),\r\n          }\r\n        }\r\n      }\r\n\r\n      return sudoku\r\n    }\r\n    case 'delete': {\r\n      let newBoard = [...sudoku.board]\r\n      let rowIndex = newBoard.findIndex((row) =>\r\n        row.some((element) => element.selected)\r\n      )\r\n      if (rowIndex >= 0) {\r\n        let colIndex = newBoard[rowIndex].findIndex(\r\n          (element) => element.selected\r\n        )\r\n        if (!newBoard[rowIndex][colIndex].setBoard) {\r\n          newBoard[rowIndex][colIndex].value = undefined\r\n          newBoard[rowIndex][colIndex].wrong = false\r\n          return {\r\n            ...sudoku,\r\n            board: newBoard,\r\n          }\r\n        }\r\n      }\r\n\r\n      return sudoku\r\n    }\r\n    case 'deselect': {\r\n      return {\r\n        ...sudoku,\r\n        board: sudoku.board.map((row) => {\r\n          return row.map((element) => {\r\n            return { ...element, selected: false, highlighted: false }\r\n          })\r\n        }),\r\n      }\r\n    }\r\n    default: {\r\n      return sudoku\r\n    }\r\n  }\r\n}\r\n\r\nfunction shouldHighlight(target, element) {\r\n  //check rows\r\n  if (Number(target.dataset.x) === element.x) {\r\n    return true\r\n  }\r\n  //check cols\r\n  if (Number(target.dataset.y) === element.y) {\r\n    return true\r\n  }\r\n  //check same 3x3square\r\n  if (Number(target.dataset.square) === element.square) {\r\n    return true\r\n  }\r\n  //check same number\r\n  if (target.innerText && Number(target.innerText) === element.value) {\r\n    return true\r\n  }\r\n\r\n  //if none returned true then its false\r\n  return false\r\n}\r\n","export default function solveBoard(board) {\r\n  if (board.length === 0) {\r\n    return []\r\n  }\r\n\r\n  let _board = []\r\n\r\n  for (let i = 0; i < 9; i++) {\r\n    _board.push([])\r\n    for (let j = 0; j < 9; j++) {\r\n      _board[i].push(board[i][j])\r\n    }\r\n  }\r\n\r\n  sudokoSolver(_board)\r\n  return _board\r\n\r\n  function isValid(board, row, col, k) {\r\n    for (let i = 0; i < 9; i++) {\r\n      const m = 3 * Math.floor(row / 3) + Math.floor(i / 3)\r\n      const n = 3 * Math.floor(col / 3) + (i % 3)\r\n      if (board[row][i] === k || board[i][col] === k || board[m][n] === k) {\r\n        return false\r\n      }\r\n    }\r\n    return true\r\n  }\r\n\r\n  function sudokoSolver(data) {\r\n    for (let i = 0; i < 9; i++) {\r\n      for (let j = 0; j < 9; j++) {\r\n        if (data[i][j] === 0) {\r\n          for (let k = 1; k <= 9; k++) {\r\n            if (isValid(data, i, j, k)) {\r\n              data[i][j] = k\r\n              if (sudokoSolver(data)) {\r\n                return true\r\n              } else {\r\n                data[i][j] = 0\r\n              }\r\n            }\r\n          }\r\n          return false\r\n        }\r\n      }\r\n    }\r\n    return true\r\n  }\r\n}\r\n","import React from 'react'\r\n\r\nexport default function ButtonInput({ dispatch, sudoku }) {\r\n  function handleInputClick(e) {\r\n    if (!sudoku.selectedElement) {\r\n      return\r\n    }\r\n\r\n    if (e.target.innerText === 'C') {\r\n      return dispatch({\r\n        type: 'delete',\r\n      })\r\n    }\r\n    dispatch({\r\n      type: 'input',\r\n      payload: {\r\n        value: Number(e.target.innerText),\r\n      },\r\n    })\r\n    dispatch({\r\n      type: 'select',\r\n      payload: { target: sudoku.selectedElement },\r\n    })\r\n  }\r\n  return (\r\n    <div className='input'>\r\n      <button onClick={handleInputClick}>1</button>\r\n      <button onClick={handleInputClick}>2</button>\r\n      <button onClick={handleInputClick}>3</button>\r\n      <button onClick={handleInputClick}>4</button>\r\n      <button onClick={handleInputClick}>5</button>\r\n      <button onClick={handleInputClick}>6</button>\r\n      <button onClick={handleInputClick}>7</button>\r\n      <button onClick={handleInputClick}>8</button>\r\n      <button onClick={handleInputClick}>9</button>\r\n      <button onClick={handleInputClick}>C</button>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState, useRef, useReducer } from 'react'\r\nimport Board from './Board'\r\n\r\nimport '../scss/styles.scss'\r\nimport Loading from './Loading'\r\nimport Paused from './Paused'\r\nimport useEventListener from '../hooks/useEventListener'\r\nimport sudokuReducer from './sudokuReducer.js'\r\nimport solveBoard from '../sudoku/solveBoard'\r\nimport Time, { format } from './Time.js'\r\nimport ButtonInput from './ButtonInput.js'\r\n\r\nexport default function Sudoku() {\r\n  const [sudoku, dispatch] = useReducer(sudokuReducer, {\r\n    board: [],\r\n    mistakes: 0,\r\n    completed: false,\r\n  })\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [difficulty, setDifficulty] = useState('easy')\r\n  const [isPaused, setIsPaused] = useState(true)\r\n  const [time, setTime] = useState(0)\r\n\r\n  const difficultySelectRef = useRef()\r\n\r\n  async function getBoard() {\r\n    setIsLoading(true)\r\n    const response = await fetch(url(difficulty))\r\n    const board = await response.json()\r\n    const solution = solveBoard(board.board)\r\n    dispatch({\r\n      type: 'set-board',\r\n      payload: {\r\n        board: board.board.map((row, rowIndex) => {\r\n          return row.map((element, colIndex) => {\r\n            if (element === 0) {\r\n              return {\r\n                x: colIndex,\r\n                y: rowIndex,\r\n                value: undefined,\r\n                correct: solution[rowIndex][colIndex],\r\n                setBoard: false,\r\n                square: parseInt(rowIndex / 3) * 3 + parseInt(colIndex / 3),\r\n              }\r\n            }\r\n            return {\r\n              x: colIndex,\r\n              y: rowIndex,\r\n              value: element,\r\n              setBoard: true,\r\n              square: parseInt(rowIndex / 3) * 3 + parseInt(colIndex / 3),\r\n            }\r\n          })\r\n        }),\r\n      },\r\n    })\r\n    setIsLoading(false)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (sudoku.completed) {\r\n      alert(\r\n        `You completed the board in ${format(time)} with ${\r\n          sudoku.mistakes\r\n        } mistakes`\r\n      )\r\n      getBoard()\r\n    }\r\n    if (sudoku.mistakes === 3) {\r\n      alert('You made too many mistakes')\r\n      getBoard()\r\n    }\r\n    console.log(sudoku)\r\n  }, [sudoku])\r\n\r\n  useEventListener('keydown', (e) => {\r\n    if (e.code === 'Space') {\r\n      setIsPaused(!isPaused)\r\n    }\r\n\r\n    if (e.key >= 1 && e.key <= 9) {\r\n      dispatch({\r\n        type: 'input',\r\n        payload: {\r\n          value: Number(e.key),\r\n        },\r\n      })\r\n      dispatch({ type: 'select', payload: { target: sudoku.selectedElement } })\r\n    }\r\n\r\n    if (e.code === 'Backspace') {\r\n      dispatch({\r\n        type: 'delete',\r\n      })\r\n    }\r\n  })\r\n\r\n  function handleDifficultyChange(e) {\r\n    setIsLoading(true)\r\n    setDifficulty(difficultySelectRef.current.value)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getBoard()\r\n  }, [difficulty])\r\n\r\n  if (isLoading) {\r\n    return <Loading />\r\n  } else {\r\n    if (isPaused) {\r\n      return (\r\n        <div className='paused'>\r\n          <Paused sudoku={sudoku} time={time} />\r\n          <button\r\n            onClick={() => {\r\n              setIsPaused(false)\r\n            }}\r\n          >\r\n            Play\r\n          </button>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <div className='details'>\r\n          <div>Mistakes: {sudoku.mistakes}</div>\r\n          <Time time={time} />\r\n        </div>\r\n\r\n        <Board sudoku={sudoku} dispatch={dispatch} setTime={setTime} />\r\n        <ButtonInput sudoku={sudoku} dispatch={dispatch} />\r\n        <div className='controls'>\r\n          <select\r\n            name='difficulty'\r\n            id='difficulty'\r\n            onChange={handleDifficultyChange}\r\n            defaultValue={difficulty}\r\n            ref={difficultySelectRef}\r\n          >\r\n            <option value='easy'>Easy</option>\r\n            <option value='medium'>Medium</option>\r\n            <option value='hard'>Hard</option>\r\n            <option value='random'>Random</option>\r\n          </select>\r\n          <button onClick={() => setIsPaused(true)}>Pause</button>\r\n          <button onClick={() => getBoard()}>Refresh</button>\r\n        </div>\r\n      </>\r\n    )\r\n  }\r\n}\r\nfunction url(difficulty) {\r\n  // console.log(`https://sugoku.herokuapp.com/board?difficulty=${difficulty}`)\r\n  return `https://sugoku.herokuapp.com/board?difficulty=${difficulty}`\r\n}\r\n","import { useEffect, useRef } from 'react'\r\n\r\nexport default function useEventListener(eventType, handler) {\r\n  const handlerRef = useRef(handler)\r\n\r\n  useEffect(() => {\r\n    handlerRef.current = handler\r\n  })\r\n\r\n  useEffect(() => {\r\n    function internalHandler(e) {\r\n      return handlerRef.current(e)\r\n    }\r\n    document.addEventListener(eventType, internalHandler)\r\n\r\n    return () => {\r\n      document.removeEventListener(eventType, internalHandler)\r\n    }\r\n  }, [eventType])\r\n}\r\n","import React from 'react'\r\nimport Sudoku from './Sudoku'\r\n\r\nexport default function App() {\r\n  return (\r\n    <>\r\n      <div className='title'>Sudoku</div>\r\n      <Sudoku />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport App from './components/App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.querySelector('#root')\r\n)\r\n"],"sourceRoot":""}